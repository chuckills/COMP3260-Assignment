import java.util.HashMap;

/*
======================================================
COMP3260 Assignment 2
Gregory Choice(c9311718) & Christopher Booth(c3229932)
======================================================
*/

/** SBox.java
 *
 * A simple class containing static lookup tables for AES SBox and ISBox
 * in a Hashmap
 *
 */
public class SBox
{
    public static final HashMap<Integer, Integer> SBOX = fillSBox();
    public static final HashMap<Integer, Integer> ISBOX = fillISBox();

    /** fillSBox()
     *
     * Simply fills the SBox HashMap
     *
     * @return - HashMap, a HashMap referenced by the input integer as the key, and takes the value as substitution
     */
    private static HashMap<Integer, Integer> fillSBox()
    {
        HashMap<Integer, Integer> box = new HashMap<>();

        //=================    Row 0
        box.put(0x00, 0x63); box.put(0x01, 0x7C); box.put(0x02, 0x77); box.put(0x03, 0x7B); box.put(0x04, 0xF2); box.put(0x05, 0x6B); box.put(0x06, 0x6F); box.put(0x07, 0xC5);
        box.put(0x08, 0x30); box.put(0x09, 0x01); box.put(0x0A, 0x67); box.put(0x0B, 0x2B); box.put(0x0C, 0xFE); box.put(0x0D, 0xD7); box.put(0x0E, 0xAB); box.put(0x0F, 0x76);

        //=================    Row 1
        box.put(0x10, 0xCA); box.put(0x11, 0x82); box.put(0x12, 0xC9); box.put(0x13, 0x7D); box.put(0x14, 0xFA); box.put(0x15, 0x59); box.put(0x16, 0x47); box.put(0x17, 0xF0);
        box.put(0x18, 0xAD); box.put(0x19, 0xD4); box.put(0x1A, 0xA2); box.put(0x1B, 0xAF); box.put(0x1C, 0x9C); box.put(0x1D, 0xA4); box.put(0x1E, 0x72); box.put(0x1F, 0xC0);

        //=================    Row 2
        box.put(0x20, 0xB7); box.put(0x21, 0xFD); box.put(0x22, 0x93); box.put(0x23, 0x26); box.put(0x24, 0x36); box.put(0x25, 0x3F); box.put(0x26, 0xF7); box.put(0x27, 0xCC);
        box.put(0x28, 0x34); box.put(0x29, 0xA5); box.put(0x2A, 0xE5); box.put(0x2B, 0xF1); box.put(0x2C, 0x71); box.put(0x2D, 0xD8); box.put(0x2E, 0x31); box.put(0x2F, 0x15);

        //=================    Row 3
        box.put(0x30, 0x04); box.put(0x31, 0xC7); box.put(0x32, 0x23); box.put(0x33, 0xC3); box.put(0x34, 0x18); box.put(0x35, 0x96); box.put(0x36, 0x05); box.put(0x37, 0x9A);
        box.put(0x38, 0x07); box.put(0x39, 0x12); box.put(0x3A, 0x80); box.put(0x3B, 0xE2); box.put(0x3C, 0xEB); box.put(0x3D, 0x27); box.put(0x3E, 0xB2); box.put(0x3F, 0x75);

        //=================    Row 4
        box.put(0x40, 0x09); box.put(0x41, 0x83); box.put(0x42, 0x2C); box.put(0x43, 0x1A); box.put(0x44, 0x1B); box.put(0x45, 0x6E); box.put(0x46, 0x5A); box.put(0x47, 0xA0);
        box.put(0x48, 0x52); box.put(0x49, 0x3B); box.put(0x4A, 0xD6); box.put(0x4B, 0xB3); box.put(0x4C, 0x29); box.put(0x4D, 0xE3); box.put(0x4E, 0x2F); box.put(0x4F, 0x84);

        //=================    Row 5
        box.put(0x50, 0x53); box.put(0x51, 0xD1); box.put(0x52, 0x00); box.put(0x53, 0xED); box.put(0x54, 0x20); box.put(0x55, 0xFC); box.put(0x56, 0xB1); box.put(0x57, 0x5B);
        box.put(0x58, 0x6A); box.put(0x59, 0xCB); box.put(0x5A, 0xBE); box.put(0x5B, 0x39); box.put(0x5C, 0x4A); box.put(0x5D, 0x4C); box.put(0x5E, 0x58); box.put(0x5F, 0xCF);

        //=================    Row 6
        box.put(0x60, 0xD0); box.put(0x61, 0xEF); box.put(0x62, 0xAA); box.put(0x63, 0xFB); box.put(0x64, 0x43); box.put(0x65, 0x4D); box.put(0x66, 0x33); box.put(0x67, 0x85);
        box.put(0x68, 0x45); box.put(0x69, 0xF9); box.put(0x6A, 0x02); box.put(0x6B, 0x7F); box.put(0x6C, 0x50); box.put(0x6D, 0x3C); box.put(0x6E, 0x9F); box.put(0x6F, 0xA8);

        //=================    Row 7
        box.put(0x70, 0x51); box.put(0x71, 0xA3); box.put(0x72, 0x40); box.put(0x73, 0x8F); box.put(0x74, 0x92); box.put(0x75, 0x9D); box.put(0x76, 0x38); box.put(0x77, 0xF5);
        box.put(0x78, 0xBC); box.put(0x79, 0xB6); box.put(0x7A, 0xDA); box.put(0x7B, 0x21); box.put(0x7C, 0x10); box.put(0x7D, 0xFF); box.put(0x7E, 0xF3); box.put(0x7F, 0xD2);

        //=================    Row 8
        box.put(0x80, 0xCD); box.put(0x81, 0x0C); box.put(0x82, 0x13); box.put(0x83, 0xEC); box.put(0x84, 0x5F); box.put(0x85, 0x97); box.put(0x86, 0x44); box.put(0x87, 0x17);
        box.put(0x88, 0xC4); box.put(0x89, 0xA7); box.put(0x8A, 0x7E); box.put(0x8B, 0x3D); box.put(0x8C, 0x64); box.put(0x8D, 0x5D); box.put(0x8E, 0x19); box.put(0x8F, 0x73);

        //=================    Row 9
        box.put(0x90, 0x60); box.put(0x91, 0x81); box.put(0x92, 0x4F); box.put(0x93, 0xDC); box.put(0x94, 0x22); box.put(0x95, 0x2A); box.put(0x96, 0x90); box.put(0x97, 0x88);
        box.put(0x98, 0x46); box.put(0x99, 0xEE); box.put(0x9A, 0xB8); box.put(0x9B, 0x14); box.put(0x9C, 0xDE); box.put(0x9D, 0x5E); box.put(0x9E, 0x0B); box.put(0x9F, 0xDB);

        //=================    Row A
        box.put(0xA0, 0xE0); box.put(0xA1, 0x32); box.put(0xA2, 0x3A); box.put(0xA3, 0x0A); box.put(0xA4, 0x49); box.put(0xA5, 0x06); box.put(0xA6, 0x24); box.put(0xA7, 0x5C);
        box.put(0xA8, 0xC2); box.put(0xA9, 0xD3); box.put(0xAA, 0xAC); box.put(0xAB, 0x62); box.put(0xAC, 0x91); box.put(0xAD, 0x95); box.put(0xAE, 0xE4); box.put(0xAF, 0x79);

        //=================    Row B
        box.put(0xB0, 0xE7); box.put(0xB1, 0xC8); box.put(0xB2, 0x37); box.put(0xB3, 0x6D); box.put(0xB4, 0x8D); box.put(0xB5, 0xD5); box.put(0xB6, 0x4E); box.put(0xB7, 0xA9);
        box.put(0xB8, 0x6C); box.put(0xB9, 0x56); box.put(0xBA, 0xF4); box.put(0xBB, 0xEA); box.put(0xBC, 0x65); box.put(0xBD, 0x7A); box.put(0xBE, 0xAE); box.put(0xBF, 0x08);

        //=================    Row C
        box.put(0xC0, 0xBA); box.put(0xC1, 0x78); box.put(0xC2, 0x25); box.put(0xC3, 0x2E); box.put(0xC4, 0x1C); box.put(0xC5, 0xA6); box.put(0xC6, 0xB4); box.put(0xC7, 0xC6);
        box.put(0xC8, 0xE8); box.put(0xC9, 0xDD); box.put(0xCA, 0x74); box.put(0xCB, 0x1F); box.put(0xCC, 0x4B); box.put(0xCD, 0xBD); box.put(0xCE, 0x8B); box.put(0xCF, 0x8A);

        //=================    Row D
        box.put(0xD0, 0x70); box.put(0xD1, 0x3E); box.put(0xD2, 0xB5); box.put(0xD3, 0x66); box.put(0xD4, 0x48); box.put(0xD5, 0x03); box.put(0xD6, 0xF6); box.put(0xD7, 0x0E);
        box.put(0xD8, 0x61); box.put(0xD9, 0x35); box.put(0xDA, 0x57); box.put(0xDB, 0xB9); box.put(0xDC, 0x86); box.put(0xDD, 0xC1); box.put(0xDE, 0x1D); box.put(0xDF, 0x9E);

        //=================    Row E
        box.put(0xE0, 0xE1); box.put(0xE1, 0xF8); box.put(0xE2, 0x98); box.put(0xE3, 0x11); box.put(0xE4, 0x69); box.put(0xE5, 0xD9); box.put(0xE6, 0x8E); box.put(0xE7, 0x94);
        box.put(0xE8, 0x9B); box.put(0xE9, 0x1E); box.put(0xEA, 0x87); box.put(0xEB, 0xE9); box.put(0xEC, 0xCE); box.put(0xED, 0x55); box.put(0xEE, 0x28); box.put(0xEF, 0xDF);

        //=================    Row F
        box.put(0xF0, 0x8C); box.put(0xF1, 0xA1); box.put(0xF2, 0x89); box.put(0xF3, 0x0D); box.put(0xF4, 0xBF); box.put(0xF5, 0xE6); box.put(0xF6, 0x42); box.put(0xF7, 0x68);
        box.put(0xF8, 0x41); box.put(0xF9, 0x99); box.put(0xFA, 0x2D); box.put(0xFB, 0x0F); box.put(0xFC, 0xB0); box.put(0xFD, 0x54); box.put(0xFE, 0xBB); box.put(0xFF, 0x16);

        return box;
    }

    /** fillISBox()
     *
     * Simply fills the ISBox HashMap
     *
     * @return - HashMap, a HashMap referenced by the input integer as the key, and takes the value as substitution
     */
    private static HashMap<Integer, Integer> fillISBox()
    {
        HashMap<Integer, Integer> box = new HashMap<>();

        //=================    Row 0
        box.put(0x00, 0x52); box.put(0x01, 0x09); box.put(0x02, 0x6A); box.put(0x03, 0xD5); box.put(0x04, 0x30); box.put(0x05, 0x36); box.put(0x06, 0xA5); box.put(0x07, 0x38);
        box.put(0x08, 0xBF); box.put(0x09, 0x40); box.put(0x0A, 0xA3); box.put(0x0B, 0x9E); box.put(0x0C, 0x81); box.put(0x0D, 0xF3); box.put(0x0E, 0xD7); box.put(0x0F, 0xFB);

        //=================    Row 1
        box.put(0x10, 0x7C); box.put(0x11, 0xE3); box.put(0x12, 0x39); box.put(0x13, 0x82); box.put(0x14, 0x9B); box.put(0x15, 0x2F); box.put(0x16, 0xFF); box.put(0x17, 0x87);
        box.put(0x18, 0x34); box.put(0x19, 0x8E); box.put(0x1A, 0x43); box.put(0x1B, 0x44); box.put(0x1C, 0xC4); box.put(0x1D, 0xDE); box.put(0x1E, 0xE9); box.put(0x1F, 0xCB);

        //=================    Row 2
        box.put(0x20, 0x54); box.put(0x21, 0x7B); box.put(0x22, 0x94); box.put(0x23, 0x32); box.put(0x24, 0xA6); box.put(0x25, 0xC2); box.put(0x26, 0x23); box.put(0x27, 0x3D);
        box.put(0x28, 0xEE); box.put(0x29, 0x4C); box.put(0x2A, 0x95); box.put(0x2B, 0x0B); box.put(0x2C, 0x42); box.put(0x2D, 0xFA); box.put(0x2E, 0xC3); box.put(0x2F, 0x4E);

        //=================    Row 3
        box.put(0x30, 0x08); box.put(0x31, 0x2E); box.put(0x32, 0xA1); box.put(0x33, 0x66); box.put(0x34, 0x28); box.put(0x35, 0xD9); box.put(0x36, 0x24); box.put(0x37, 0xB2);
        box.put(0x38, 0x76); box.put(0x39, 0x5B); box.put(0x3A, 0xA2); box.put(0x3B, 0x49); box.put(0x3C, 0x6D); box.put(0x3D, 0x8B); box.put(0x3E, 0xD1); box.put(0x3F, 0x25);

        //=================    Row 4
        box.put(0x40, 0x72); box.put(0x41, 0xF8); box.put(0x42, 0xF6); box.put(0x43, 0x64); box.put(0x44, 0x86); box.put(0x45, 0x68); box.put(0x46, 0x98); box.put(0x47, 0x16);
        box.put(0x48, 0xD4); box.put(0x49, 0xA4); box.put(0x4A, 0x5C); box.put(0x4B, 0xCC); box.put(0x4C, 0x5D); box.put(0x4D, 0x65); box.put(0x4E, 0xB6); box.put(0x4F, 0x92);

        //=================    Row 5
        box.put(0x50, 0x6C); box.put(0x51, 0x70); box.put(0x52, 0x48); box.put(0x53, 0x50); box.put(0x54, 0xFD); box.put(0x55, 0xED); box.put(0x56, 0xB9); box.put(0x57, 0xDA);
        box.put(0x58, 0x5E); box.put(0x59, 0x15); box.put(0x5A, 0x46); box.put(0x5B, 0x57); box.put(0x5C, 0xA7); box.put(0x5D, 0x8D); box.put(0x5E, 0x9D); box.put(0x5F, 0x84);

        //=================    Row 6
        box.put(0x60, 0x90); box.put(0x61, 0xD8); box.put(0x62, 0xAB); box.put(0x63, 0x00); box.put(0x64, 0x8C); box.put(0x65, 0xBC); box.put(0x66, 0xD3); box.put(0x67, 0x0A);
        box.put(0x68, 0xF7); box.put(0x69, 0xE4); box.put(0x6A, 0x58); box.put(0x6B, 0x05); box.put(0x6C, 0xB8); box.put(0x6D, 0xB3); box.put(0x6E, 0x45); box.put(0x6F, 0x06);

        //=================    Row 7
        box.put(0x70, 0xD0); box.put(0x71, 0x2C); box.put(0x72, 0x1E); box.put(0x73, 0x8F); box.put(0x74, 0xCA); box.put(0x75, 0x3F); box.put(0x76, 0x0F); box.put(0x77, 0x02);
        box.put(0x78, 0xC1); box.put(0x79, 0xAF); box.put(0x7A, 0xBD); box.put(0x7B, 0x03); box.put(0x7C, 0x01); box.put(0x7D, 0x13); box.put(0x7E, 0x8A); box.put(0x7F, 0x6B);

        //=================    Row 8
        box.put(0x80, 0x3A); box.put(0x81, 0x91); box.put(0x82, 0x11); box.put(0x83, 0x41); box.put(0x84, 0x4F); box.put(0x85, 0x67); box.put(0x86, 0xDC); box.put(0x87, 0xEA);
        box.put(0x88, 0x97); box.put(0x89, 0xF2); box.put(0x8A, 0xCF); box.put(0x8B, 0xCE); box.put(0x8C, 0xF0); box.put(0x8D, 0xB4); box.put(0x8E, 0xE6); box.put(0x8F, 0x73);

        //=================    Row 9
        box.put(0x90, 0x96); box.put(0x91, 0xAC); box.put(0x92, 0x74); box.put(0x93, 0x22); box.put(0x94, 0xE7); box.put(0x95, 0xAD); box.put(0x96, 0x35); box.put(0x97, 0x85);
        box.put(0x98, 0xE2); box.put(0x99, 0xF9); box.put(0x9A, 0x37); box.put(0x9B, 0xE8); box.put(0x9C, 0x1C); box.put(0x9D, 0x75); box.put(0x9E, 0xDF); box.put(0x9F, 0x6E);

        //=================    Row A
        box.put(0xA0, 0x47); box.put(0xA1, 0xF1); box.put(0xA2, 0x1A); box.put(0xA3, 0x71); box.put(0xA4, 0x1D); box.put(0xA5, 0x29); box.put(0xA6, 0xC5); box.put(0xA7, 0x89);
        box.put(0xA8, 0x6F); box.put(0xA9, 0xB7); box.put(0xAA, 0x62); box.put(0xAB, 0x0E); box.put(0xAC, 0xAA); box.put(0xAD, 0x18); box.put(0xAE, 0xBE); box.put(0xAF, 0x1B);

        //=================    Row B
        box.put(0xB0, 0xFC); box.put(0xB1, 0x56); box.put(0xB2, 0x3E); box.put(0xB3, 0x4B); box.put(0xB4, 0xC6); box.put(0xB5, 0xD2); box.put(0xB6, 0x79); box.put(0xB7, 0x20);
        box.put(0xB8, 0x9A); box.put(0xB9, 0xDB); box.put(0xBA, 0xC0); box.put(0xBB, 0xFE); box.put(0xBC, 0x78); box.put(0xBD, 0xCD); box.put(0xBE, 0x5A); box.put(0xBF, 0xF4);

        //=================    Row C
        box.put(0xC0, 0x1F); box.put(0xC1, 0xDD); box.put(0xC2, 0xA8); box.put(0xC3, 0x33); box.put(0xC4, 0x88); box.put(0xC5, 0x07); box.put(0xC6, 0xC7); box.put(0xC7, 0x31);
        box.put(0xC8, 0xB1); box.put(0xC9, 0x12); box.put(0xCA, 0x10); box.put(0xCB, 0x59); box.put(0xCC, 0x27); box.put(0xCD, 0x80); box.put(0xCE, 0xEC); box.put(0xCF, 0x5F);

        //=================    Row D
        box.put(0xD0, 0x60); box.put(0xD1, 0x51); box.put(0xD2, 0x7F); box.put(0xD3, 0xA9); box.put(0xD4, 0x19); box.put(0xD5, 0xB5); box.put(0xD6, 0x4A); box.put(0xD7, 0x0D);
        box.put(0xD8, 0x2D); box.put(0xD9, 0xE5); box.put(0xDA, 0x7A); box.put(0xDB, 0x9F); box.put(0xDC, 0x93); box.put(0xDD, 0xC9); box.put(0xDE, 0x9C); box.put(0xDF, 0xEF);

        //=================    Row E
        box.put(0xE0, 0xA0); box.put(0xE1, 0xE0); box.put(0xE2, 0x3B); box.put(0xE3, 0x4D); box.put(0xE4, 0xAE); box.put(0xE5, 0x2A); box.put(0xE6, 0xF5); box.put(0xE7, 0xB0);
        box.put(0xE8, 0xC8); box.put(0xE9, 0xEB); box.put(0xEA, 0xBB); box.put(0xEB, 0x3C); box.put(0xEC, 0x83); box.put(0xED, 0x53); box.put(0xEE, 0x99); box.put(0xEF, 0x61);

        //=================    Row F
        box.put(0xF0, 0x17); box.put(0xF1, 0x2B); box.put(0xF2, 0x04); box.put(0xF3, 0x7E); box.put(0xF4, 0xBA); box.put(0xF5, 0x77); box.put(0xF6, 0xD6); box.put(0xF7, 0x26);
        box.put(0xF8, 0xE1); box.put(0xF9, 0x69); box.put(0xFA, 0x14); box.put(0xFB, 0x63); box.put(0xFC, 0x55); box.put(0xFD, 0x21); box.put(0xFE, 0x0C); box.put(0xFF, 0x7D);

        return box;
    }
}
